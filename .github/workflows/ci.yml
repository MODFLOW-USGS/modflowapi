name: modflowapi continuous integration

on:
  schedule:
    - cron: '0 8 * * *' # run at 8 AM UTC (12 am PST)
  push:
    branches:
      - main
      - develop
      - 'release*'
  pull_request:
    branches: [master, develop]

jobs:

  std_setup:
    name: standard installation
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    defaults:
      run:
        shell: bash

    steps:

    # check out repo
    - name: Checkout repo
      uses: actions/checkout@v2.3.4

    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip

    - name: Base installation
      run: |
        pip install -e .
        
    - name: Print version
      run: |
        python -c "import modflowapi; print(modflowapi.__version__)"


  lint:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    defaults:
      run:
        shell: bash

    if: github.event_name != 'schedule'
    steps:
    # check out repo
    - name: Checkout repo
      uses: actions/checkout@v2.3.4

    # Standard python fails on Windows without GDAL installation. Using
    # standard python here since only linting on linux.
    # Use standard bash shell with standard python
    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        cache: 'pip'
        cache-dependency-path: setup.cfg

    - name: Print python version
      run: |
        python --version

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
        pip install ".[lint]"

    - name: Run black
      run: |
        echo "if black check fails run"
        echo "  black --line-length 79 ./modflowapi"
        echo "and then commit the changes."
        black --check --line-length 79 ./modflowapi

    - name: Run flake8
      run: |
        flake8 --count --show-source --exit-zero ./modflowapi

    - name: Run pylint
      run: |
        pylint --jobs=2 --errors-only --exit-zero ./modflowapi

  autotest:
    name: modflowapi autotests
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ 3.8, 3.9, "3.10"]
    defaults:
      run:
        shell: bash

    steps:
      # check out repo
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: setup.cfg

      - name: Install Python dependencies
        if: runner.os != 'Windows'
        run: |
          pip install --upgrade pip
          pip install .
          pip install ".[test]"

      - name: Install Python dependencies Windows
        if: runner.os == 'Windows'
        run: |
          python.exe -m pip install --upgrade pip
          python.exe -m pip install .
          python.exe -m pip install ".[test]"

      - name: Install modflow executables
        uses: modflowpy/install-modflow-action@v1

      - name: Run autotests
        working-directory: ./autotest
        run: |
          pytest -v